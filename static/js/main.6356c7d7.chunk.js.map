{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","state","hendleChange","e","currentTarget","value","setState","hendleSubmit","preventDefault","props","reset","form","onSubmit","this","input","type","onChange","required","pattern","button","Component","connect","dispatch","phone","phoneBookActions","filter","phonebook","label","target","contacts","list","normalizedName","toLowerCase","contact","includes","filterContacts","map","item","phoneNumber","onClick","App","createReducer","actionsPhonebook","find","alert","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6356c7d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired),\n};\n\nexport default Container;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"phonebook/addContact\", (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction(\"phonebook/deleteContact\");\nconst changeFilter = createAction(\"phonebook/filterContact\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phoneBookActions from \"../../redux/phonebook/phonebook-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  hendleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  hendleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.addContact(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.hendleSubmit}>\n        <label>\n          Имя\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.hendleChange}\n            required\n          ></input>\n        </label>\n        <label>\n          Телефон\n          <input\n            className={s.input}\n            type=\"tel\"\n            pattern=\"^[ 0-9]+$\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.hendleChange}\n            required\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (name, phone) =>\n    dispatch(phoneBookActions.addContact(name, phone)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phoneBookActions from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = ({ filter, changeFilter }) => {\n  const onChange = (e) => {\n    changeFilter(e.target.value);\n  };\n\n  return (\n    <p>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChange}\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  filter: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (value) => dispatch(phoneBookActions.changeFilter(value)),\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phoneBookActions from \"../../redux/phonebook/phonebook-actions\";\n\nconst ContactList = ({ contacts, deleteContact, filter }) => {\n  const filterContacts = () => {\n    const normalizedName = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedName)\n    );\n  };\n\n  return (\n    <ul className={s.list}>\n      {filterContacts().map((item) => (\n        <li className={s.item} key={item.id}>\n          {item.name}:<span className={s.phoneNumber}>{item.number}</span>\n          <button className={s.button} onClick={() => deleteContact(item.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, props) => ({\n  contacts: state.phonebook.contacts,\n  filter: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(phoneBookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n  // componentDidMount() {\n  //   const localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n  //   if (localContacts) {\n  //     this.setState({ contacts: [...localContacts] });\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   const prevContacts = prevProps.contacts;\n  //   const nextContacts = this.props.contacts;\n\n  //   if (prevContacts !== nextContacts) {\n  //     console.log(\"обновилось поле \");\n  //     localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <div>\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actionsPhonebook from \"./phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [actionsPhonebook.addContact]: (state, { payload }) => {\n    const alreadyContacts = state.find((item) => item.name === payload.name);\n    if (alreadyContacts) {\n      alert(`${payload.name} is already in contacts`);\n      return;\n    }\n    return [...state, payload];\n  },\n  [actionsPhonebook.deleteContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actionsPhonebook.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactReducer from \"./phonebook/phonebook-reducers\";\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"helloRedux\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(persistConfig, contactReducer),\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\",\"phoneNumber\":\"ContactList_phoneNumber__1oFI1\"};"],"sourceRoot":""}